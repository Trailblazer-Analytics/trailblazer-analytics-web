---
import { getCollection, getEntryBySlug, type CollectionEntry } from 'astro:content';
import Base from '../../layouts/Base.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.jsx';
import siteConfig from '../../site.config.js';

export async function getStaticPaths() {
  const downloadEntries = await getCollection('downloads');
  return downloadEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<'downloads'>;
};

const { entry } = Astro.props as Props;
const { Content } = await entry.render();

// Set up SEO data
const seoData = {
  title: `Download ${entry.data.title} - Free Analytics Resource`,
  description: entry.data.description,
  image: "/og-image-downloads.png",
};

// Prepare download URL with proper base path
const base = import.meta.env.BASE_URL;
const downloadUrl = entry.data.downloadUrl.startsWith('/') 
  ? `${base}${entry.data.downloadUrl.substring(1)}` 
  : `${base}${entry.data.downloadUrl}`;

// Track download - will happen via client-side redirect
const enableTracking = siteConfig.downloadTrackingEnabled;

// Format date for display
function formatDate(dateString) {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Base {...seoData}>
  <Navbar />
  
  <!-- Download Page Header -->
  <section class="bg-gradient-to-br from-gray-900 to-gray-800 text-white py-20">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <div class="mb-4">
          <a href={base + "/downloads"} class="text-gray-300 hover:text-white flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Back to all downloads
          </a>
        </div>
        <h1 class="text-4xl md:text-5xl font-bold mb-6">
          {entry.data.title}
        </h1>
        <p class="text-xl text-gray-300 mb-4">
          {entry.data.description}
        </p>
        <div class="flex flex-wrap gap-4 items-center text-sm text-gray-400">
          <span>Added: {formatDate(entry.data.date)}</span>
          <span>•</span>
          <span>{entry.data.fileType} • {entry.data.fileSize}</span>
          <span>•</span>
          <span>{entry.data.downloads.toLocaleString()} downloads</span>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Content & Download Section -->
  <section class="bg-white py-16">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <div class="bg-gray-50 rounded-xl p-8 shadow-md mb-12">
          <div class="flex flex-col md:flex-row gap-8 items-center">
            <!-- Resource Preview Image/Icon -->
            <div class="w-full md:w-1/3 flex justify-center">
              {entry.data.fileType === 'PDF' ? (
                <div class="w-40 h-56 bg-gray-200 rounded-lg shadow-md flex items-center justify-center">
                  <svg class="w-16 h-16 text-gray-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                  </svg>
                </div>
              ) : entry.data.fileType === 'XLSX' ? (
                <div class="w-40 h-40 bg-green-100 rounded-lg shadow-md flex items-center justify-center">
                  <svg class="w-16 h-16 text-green-700" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z" clip-rule="evenodd"></path>
                  </svg>
                </div>
              ) : (
                <div class="w-40 h-40 bg-blue-100 rounded-lg shadow-md flex items-center justify-center">
                  <svg class="w-16 h-16 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 3a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                  </svg>
                </div>
              )}
            </div>
            
            <!-- Download CTA -->
            <div class="w-full md:w-2/3 flex flex-col">
              <h3 class="text-2xl font-bold text-gray-900 mb-4">Download this resource</h3>
              <p class="text-gray-600 mb-6">
                Click the button below to download this resource. No email required - it's completely free!
              </p>
              
              <div>
                <a 
                  href={downloadUrl} 
                  id="download-button"
                  class="inline-block bg-brandGreen hover:bg-green-700 text-white font-bold py-4 px-8 rounded-lg transition-colors shadow-lg"
                  download
                >
                  <div class="flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                    </svg>
                    Download {entry.data.fileType} ({entry.data.fileSize})
                  </div>
                </a>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Content Details -->
        <div class="prose prose-lg max-w-none">
          <Content />
        </div>
        
        <!-- Related Downloads -->
        <div class="mt-16">
          <h3 class="text-2xl font-bold text-gray-900 mb-8">You might also like</h3>
          
          <!-- Implement related downloads here -->
        </div>
      </div>
    </div>
  </section>
  
  <Footer />
</Base>

<script define:vars={{ enableTracking: enableTracking }}>
// Download tracking script
document.addEventListener('DOMContentLoaded', () => {
  const downloadButton = document.getElementById('download-button');
  
  if (downloadButton && enableTracking) {
    downloadButton.addEventListener('click', (e) => {
      // Track the download event
      if (typeof gtag !== 'undefined') {
        gtag('event', 'download', {
          'event_category': 'Resources',
          'event_label': document.title,
          'value': 1
        });
      }
      
      if (typeof plausible !== 'undefined') {
        plausible('Download', { 
          props: { 
            resource: document.title
          }
        });
      }
      
      // Could add server-side tracking here with a fetch call
      // fetch('/api/track-download?resource=' + encodeURIComponent(document.title))
      //  .catch(err => console.error('Error tracking download:', err));
    });
  }
});
</script>
