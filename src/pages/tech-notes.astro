---
import { getCollection } from 'astro:content';
import Base from '../layouts/Base.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.jsx';
const base = import.meta.env.BASE_URL;

const techNotes = await getCollection('techNotes');

// SEO meta data
const seoData = {
  title: "Tech Notes - Code Snippets & Developer Resources",
  description: "Technical insights, code snippets, and developer resources for data professionals. SQL tips, Python tricks, and analytics engineering best practices from Alexander Nykolaiszyn.",
  image: "/og-image-technotes.png"
};
---

<Base {...seoData}>
  <Navbar />
  
  <!-- Header Section -->
  <section class="bg-gray-900 text-white py-20">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-6">Tech Notes</h1>
        <p class="text-xl text-gray-300 mb-8">
          Technical insights, code snippets, and developer resources for data professionals and analytics engineers.
        </p>
        <div class="flex flex-wrap justify-center gap-4">
          <span class="bg-brandGreen px-4 py-2 rounded-full text-sm">Python</span>
          <span class="bg-brandGreen px-4 py-2 rounded-full text-sm">SQL</span>
          <span class="bg-brandGreen px-4 py-2 rounded-full text-sm">JavaScript</span>
          <span class="bg-brandGreen px-4 py-2 rounded-full text-sm">Machine Learning</span>
          <span class="bg-brandGreen px-4 py-2 rounded-full text-sm">Data Engineering</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Tech Note -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold text-gray-900 mb-8">Featured Technical Guide</h2>
        <div class="bg-gray-50 rounded-lg p-8 border border-gray-200">
          <div class="flex items-start gap-4 mb-4">
            <div class="bg-brandGreen p-3 rounded-lg">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
              </svg>
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-semibold text-gray-900 mb-2">Building Scalable ETL Pipelines with Python</h3>
              <p class="text-gray-600 mb-4">A comprehensive guide to designing and implementing robust data pipelines using modern Python tools and best practices.</p>
              <div class="flex items-center gap-4 text-sm text-gray-500">
                <span>15 min read</span>
                <span>•</span>
                <span>Advanced</span>
                <span>•</span>
                <span>Updated Dec 2024</span>
              </div>
            </div>
          </div>          <a href="/tech-notes/pandas-performance-tips" class="inline-flex items-center text-brandGreen font-medium hover:text-green-700 transition-colors">
            Read Full Guide
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Tech Notes Grid -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-6">
      <div class="max-w-6xl mx-auto">        <div class="flex justify-between items-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900">Latest Tech Notes</h2>
          <div class="flex gap-2" id="filter-buttons">
            <button class="filter-btn px-4 py-2 bg-brandGreen text-white rounded-lg text-sm" data-filter="all">All</button>
            <button class="filter-btn px-4 py-2 bg-white text-gray-600 border rounded-lg text-sm hover:bg-gray-50" data-filter="Python">Python</button>
            <button class="filter-btn px-4 py-2 bg-white text-gray-600 border rounded-lg text-sm hover:bg-gray-50" data-filter="SQL">SQL</button>
            <button class="filter-btn px-4 py-2 bg-white text-gray-600 border rounded-lg text-sm hover:bg-gray-50" data-filter="ML">ML</button>
          </div>
        </div>        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {techNotes.map((note) => (
            <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow" data-tags={note.data.tags ? note.data.tags.join(',') : ''}>
              <div class="p-6">
                <div class="flex items-center gap-2 mb-3">
                  {note.data.tags && note.data.tags.map(tag => (
                    <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">{tag}</span>
                  ))}                  {note.data.difficulty && (
                    <span class={
                      note.data.difficulty === 'Beginner' ? 'bg-gray-100 text-gray-600 text-xs px-2 py-1 rounded-full' :
                      note.data.difficulty === 'Intermediate' ? 'bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full' :
                      'bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full'
                    }>
                      {note.data.difficulty}
                    </span>
                  )}
                </div>
                <h3 class="text-lg font-semibold text-gray-900 mb-2">{note.data.title}</h3>
                <p class="text-gray-600 text-sm mb-4">{note.data.description}</p>
                <div class="flex items-center justify-between">
                  {note.data.readTime && (
                    <span class="text-xs text-gray-500">{note.data.readTime}</span>
                  )}
                  <a 
                    href={`/tech-notes/${note.slug}`} 
                    class="text-brandGreen text-sm font-medium hover:text-green-700"
                  >
                    Read →
                  </a>
                </div>
              </div>
            </article>
          ))}          <!-- Tech Note 5 -->
          <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow" data-tags="Python">
            <div class="p-6">
              <div class="flex items-center gap-2 mb-3">
                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">Python</span>
                <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Intermediate</span>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 mb-2">FastAPI for Data APIs</h3>
              <p class="text-gray-600 text-sm mb-4">Build high-performance data APIs with FastAPI, including authentication and validation.</p>
              <div class="flex items-center justify-between">
                <span class="text-xs text-gray-500">15 min read</span>
                <a href="#" class="text-brandGreen text-sm font-medium hover:text-green-700">Read →</a>
              </div>
            </div>
          </article>

          <!-- Tech Note 6 -->
          <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow" data-tags="SQL">
            <div class="p-6">
              <div class="flex items-center gap-2 mb-3">
                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">SQL</span>
                <span class="bg-gray-100 text-gray-600 text-xs px-2 py-1 rounded-full">Beginner</span>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 mb-2">Database Indexing Strategies</h3>
              <p class="text-gray-600 text-sm mb-4">Optimize query performance with proper indexing strategies for large datasets.</p>
              <div class="flex items-center justify-between">
                <span class="text-xs text-gray-500">10 min read</span>
                <a href="#" class="text-brandGreen text-sm font-medium hover:text-green-700">Read →</a>
              </div>
            </div>
          </article>
        </div>

        <!-- Load More Button -->
        <div class="text-center mt-12">
          <button class="bg-brandGreen text-white px-8 py-3 rounded-lg hover:bg-green-700 transition-colors">
            Load More Tech Notes
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Newsletter Section -->
  <section class="py-16 bg-gray-900 text-white">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-4">Stay Updated with Tech Notes</h2>
        <p class="text-xl text-gray-300 mb-8">
          Get the latest technical insights and code tutorials delivered to your inbox weekly.
        </p>
        <div class="max-w-md mx-auto flex gap-4">
          <input type="email" placeholder="Enter your email" class="flex-1 px-4 py-3 rounded-lg text-gray-900">
          <button class="bg-brandGold text-gray-900 px-6 py-3 rounded-lg font-medium hover:bg-yellow-500 transition-colors">
            Subscribe
          </button>
        </div>
        <p class="text-sm text-gray-400 mt-4">
          Join 2,500+ data professionals. Unsubscribe anytime.
        </p>
      </div>
    </div>
  </section>
  <Footer />
</Base>

<script>
  // Tech Notes Tag Filtering
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const techNoteCards = document.querySelectorAll('[data-tags]');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterValue = this.getAttribute('data-filter');
        
        // Update button states
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-brandGreen', 'text-white');
          btn.classList.add('bg-white', 'text-gray-600', 'border');
        });
        this.classList.remove('bg-white', 'text-gray-600', 'border');
        this.classList.add('bg-brandGreen', 'text-white');
        
        // Filter tech note cards
        techNoteCards.forEach(card => {
          if (filterValue === 'all') {
            card.style.display = 'block';
          } else {
            const cardTags = card.getAttribute('data-tags').split(',');
            if (cardTags.some(tag => tag.trim().toLowerCase().includes(filterValue.toLowerCase()))) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          }
        });
      });
    });
  });
</script>
