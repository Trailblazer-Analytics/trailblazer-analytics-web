---
import Base from '../layouts/Base.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.jsx';
import OptimizedImage from '../components/OptimizedImage.astro';
import { getCollection } from 'astro:content';

// Get sitemap data
const pages = [
  { url: '/', name: 'Home', priority: 1.0, changefreq: 'monthly' },
  { url: '/about', name: 'About', priority: 0.8, changefreq: 'monthly' },
  { url: '/services', name: 'Services', priority: 0.8, changefreq: 'monthly' },
  { url: '/blog', name: 'Blog', priority: 0.9, changefreq: 'weekly' },
  { url: '/articles', name: 'Articles', priority: 0.9, changefreq: 'weekly' },
  { url: '/downloads', name: 'Downloads', priority: 0.9, changefreq: 'weekly' },
  { url: '/white-papers', name: 'White Papers', priority: 0.9, changefreq: 'monthly' },
  { url: '/whitepapers', name: 'White Papers (Alias)', priority: 0.9, changefreq: 'monthly' },
  { url: '/tools', name: 'Tools', priority: 0.7, changefreq: 'monthly' },
  { url: '/podcast', name: 'Podcast', priority: 0.7, changefreq: 'weekly' },
  { url: '/contact', name: 'Contact', priority: 0.6, changefreq: 'monthly' },
  { url: '/connect', name: 'Connect', priority: 0.6, changefreq: 'monthly' },
  { url: '/support', name: 'Support', priority: 0.6, changefreq: 'monthly' },
  { url: '/careers', name: 'Careers', priority: 0.5, changefreq: 'monthly' },
  { url: '/privacy-policy', name: 'Privacy Policy', priority: 0.3, changefreq: 'yearly' },
  { url: '/terms-of-service', name: 'Terms of Service', priority: 0.3, changefreq: 'yearly' },
  { url: '/search', name: 'Search', priority: 0.5, changefreq: 'monthly' },
  { url: '/resources', name: 'Resources', priority: 0.7, changefreq: 'monthly' },
];

// Get blog posts
const blogPosts = await getCollection('blog');

// Get downloads with error handling for empty collection
let downloads = [];
try {
  downloads = await getCollection('downloads');
} catch (error) {
  console.warn('Downloads collection not found or empty for sitemap:', error.message);
  downloads = [];
}

// Merge all content for the sitemap
const allContent = [
  ...pages,
  ...blogPosts.map(post => ({ 
    url: `/blog/${post.slug}`, 
    name: post.data.title, 
    priority: 0.7, 
    changefreq: 'monthly',
    lastmod: post.data.lastModified || post.data.date
  })),
  ...downloads.map(download => ({ 
    url: `/downloads/${download.slug}`, 
    name: download.data.title, 
    priority: 0.6, 
    changefreq: 'monthly',
    lastmod: download.data.date
  }))
];

// SEO data
const seoData = {
  title: "Sitemap - Trailblazer Analytics",
  description: "A complete sitemap of the Trailblazer Analytics website.",
  noindex: true
};
---

<Base {...seoData}>
  <Navbar />
  
  <main class="py-20 bg-white">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <h1 class="text-4xl font-bold text-gray-900 mb-8">Sitemap</h1>
        
        <div class="prose prose-lg max-w-none">
          <p>This sitemap provides links to all pages and content on the Trailblazer Analytics website.</p>
          
          <h2>Main Pages</h2>
          <ul>
            {pages.map(page => (
              <li>
                <a href={page.url}>{page.name}</a>
              </li>
            ))}
          </ul>
          
          <h2>Blog Posts</h2>
          <ul>
            {blogPosts.map(post => (
              <li>
                <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                {post.data.date && <span class="text-gray-500 text-sm ml-2">({new Date(post.data.date).toLocaleDateString()})</span>}
              </li>
            ))}
          </ul>
          
          
          <h2>Articles</h2>
          <div class="bg-gray-50 p-4 rounded">
            <p class="text-gray-600">Articles are published on Medium.</p>
            <a href="https://medium.com/@alex.nykolaiszyn" target="_blank" rel="noopener noreferrer" 
               class="text-blue-600 hover:text-blue-700">Visit Medium Profile â†’</a>
          </div>
          
          <h2>Downloads</h2>
          <ul>
            {downloads.map(download => (
              <li>
                <a href={`/downloads/${download.slug}`}>{download.data.title}</a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  </main>
  
  <Footer />
</Base>
