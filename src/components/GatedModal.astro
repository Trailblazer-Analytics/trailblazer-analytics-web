---
// Gated Content Modal Component
interface Props {
  title: string;
  description: string;
  downloadUrl?: string;
}

const { title, description, downloadUrl = "#" } = Astro.props;
---

<style>
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
  }

  .modal.show {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-content {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  .close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
    color: #999;
    transition: color 0.2s;
  }

  .close:hover {
    color: #333;
  }

  .form-input {
    width: 100%;
    padding: 0.75rem;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.2s;
  }

  .form-input:focus {
    outline: none;
    border-color: #3b82f6;
  }

  .btn-primary {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 10px 20px rgba(59, 130, 246, 0.3);
  }
</style>

<!-- Gated Content Modal -->
<div id="gatedModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeGatedModal()">&times;</span>
    
    <div class="text-center mb-6">
      <div class="text-4xl mb-4">ðŸ“„</div>
      <h3 class="text-2xl font-bold mb-2" id="modalTitle">{title}</h3>
      <p class="text-gray-600" id="modalDescription">{description}</p>
    </div>

    <form id="gatedForm" class="space-y-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
          Email Address <span class="text-red-500">*</span>
        </label>
        <input 
          type="email" 
          name="email" 
          id="email" 
          required 
          class="form-input"
          placeholder="your@email.com"
        />
      </div>

      <div>
        <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
          First Name <span class="text-red-500">*</span>
        </label>
        <input 
          type="text" 
          name="firstName" 
          id="firstName" 
          required 
          class="form-input"
          placeholder="John"
        />
      </div>

      <div>
        <label for="company" class="block text-sm font-medium text-gray-700 mb-2">
          Company (Optional)
        </label>
        <input 
          type="text" 
          name="company" 
          id="company" 
          class="form-input"
          placeholder="Your Company Name"
        />
      </div>

      <div class="flex items-start space-x-2">
        <input 
          type="checkbox" 
          name="newsletter" 
          id="newsletter" 
          class="mt-1"
        />
        <label for="newsletter" class="text-sm text-gray-600">
          Subscribe to our newsletter for more insights and updates (optional)
        </label>
      </div>

      <div class="pt-4">
        <button 
          type="submit" 
          class="btn-primary w-full"
        >
          Get PDF Download
        </button>
      </div>

      <div class="text-xs text-gray-500 text-center">
        We respect your privacy. Your email will only be used for delivering the content and occasional updates if you opt in.
      </div>
    </form>

    <div id="successMessage" class="hidden text-center py-6">
      <div class="text-4xl mb-4">âœ…</div>
      <h3 class="text-xl font-bold mb-2">Success!</h3>
      <p class="text-gray-600 mb-4">Check your email for the download link.</p>
      <a 
        id="directDownload" 
        href={downloadUrl}
        class="btn-primary inline-block"
        target="_blank"
        rel="noopener noreferrer"
      >
        Download Now
      </a>
    </div>
  </div>
</div>

<script>
  // Global functions for modal management
  window.openGatedModal = function(title, description, downloadUrl = "#") {
    const modal = document.getElementById('gatedModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalDescription = document.getElementById('modalDescription');
    const directDownload = document.getElementById('directDownload');
    
    if (modalTitle) modalTitle.textContent = title;
    if (modalDescription) modalDescription.textContent = description;
    if (directDownload) directDownload.href = downloadUrl;
    
    modal.classList.add('show');
    document.body.style.overflow = 'hidden';
  };

  window.closeGatedModal = function() {
    const modal = document.getElementById('gatedModal');
    modal.classList.remove('show');
    document.body.style.overflow = 'auto';
    
    // Reset form
    const form = document.getElementById('gatedForm');
    const successMessage = document.getElementById('successMessage');
    if (form) form.style.display = 'block';
    if (successMessage) successMessage.classList.add('hidden');
    if (form) form.reset();
  };

  // Form submission handling
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('gatedForm');
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(form);
        const email = formData.get('email');
        const firstName = formData.get('firstName');
        const company = formData.get('company');
        const newsletter = formData.get('newsletter') === 'on';
        
        try {
          // Here you would integrate with your email service (ConvertKit, Formspree, etc.)
          // For now, we'll simulate success
          console.log('Form submitted:', { email, firstName, company, newsletter });
          
          // Simulate API call
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // Show success message
          form.style.display = 'none';
          document.getElementById('successMessage').classList.remove('hidden');
          
        } catch (error) {
          console.error('Form submission error:', error);
          alert('There was an error processing your request. Please try again.');
        }
      });
    }
  });

  // Close modal when clicking outside
  window.addEventListener('click', function(event) {
    const modal = document.getElementById('gatedModal');
    if (event.target === modal) {
      closeGatedModal();
    }
  });

  // Close modal with Escape key
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      closeGatedModal();
    }
  });
</script>
